name: VMS application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        flask db upgrade
        export FLASK_ENV=test
        flask test
        coverage run vms_test_suite.py
        coverage report --fail-under=85 --omit="app/*/test/*.py" app/*/*/*.py
    # - name: Login to Dockerhub Registry
    #   run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    # - name: Get the version
    #   id: vars
    #   run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF/refs\/tags\//})
    # - name: Build the tagged Docker image
    #   run: docker build --file Dockerfile --tag ealberto/vms-app:latest .     
    # - name: Push the latest Docker image
    #   run: docker push ealberto/vms-app:latest

    - name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - name: Google Auth Docker
      run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker     
        
    - name: Build docker image
      run: |        
        docker build --file Dockerfile --tag gcr.io/${{ secrets.GCLOUD_PROJECT }}/vms-app:latest .
        
    - name: Publish docker image
      run: |
        docker push gcr.io/${{ secrets.GCLOUD_PROJECT }}/vms-app:latest
